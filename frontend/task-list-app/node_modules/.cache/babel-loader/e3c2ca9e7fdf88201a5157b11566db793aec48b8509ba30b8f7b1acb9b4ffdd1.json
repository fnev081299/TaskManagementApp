{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\components\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Box } from '@mui/material';\nimport userService from '../services/userService';\nimport '../forms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isError, setIsError] = useState(false);\n  const handleLogin = async e => {\n    e.preventDefault();\n    const loginData = {\n      username,\n      passwordHash: password\n    };\n    try {\n      await userService.login(loginData);\n      onLogin(loginData);\n    } catch (error) {\n      console.error('Login failed:', error);\n      setMessage('Invalid username or password. Please try again.');\n      setIsError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 400,\n      mx: 'auto',\n      mt: 4,\n      p: 2,\n      boxShadow: 1,\n      borderRadius: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"username\",\n        label: \"Username\",\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), isError && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"error\",\n        sx: {\n          mt: 2\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"/XIOBwszbbi3izElcTQuWTAdImU=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Box","userService","jsxDEV","_jsxDEV","Login","onLogin","_s","username","setUsername","password","setPassword","message","setMessage","isError","setIsError","handleLogin","e","preventDefault","loginData","passwordHash","login","error","console","sx","maxWidth","mx","mt","p","boxShadow","borderRadius","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","label","fullWidth","margin","value","onChange","target","required","type","color","_c","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Box } from '@mui/material';\r\nimport userService from '../services/userService';\r\nimport '../forms.css';\r\n\r\ninterface LoginProps {\r\n    onLogin: (loginData: { username: string; passwordHash: string }) => void;\r\n}\r\n\r\nconst Login: React.FC<LoginProps> = ({ onLogin }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const handleLogin = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const loginData = {\r\n            username,\r\n            passwordHash: password\r\n        };\r\n\r\n        try {\r\n            await userService.login(loginData);\r\n            onLogin(loginData);\r\n        } catch (error) {\r\n            console.error('Login failed:', error);\r\n            setMessage('Invalid username or password. Please try again.');\r\n            setIsError(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ maxWidth: 400, mx: 'auto', mt: 4, p: 2, boxShadow: 1, borderRadius: 1 }}>\r\n            <Typography variant=\"h5\" gutterBottom>Login</Typography>\r\n            <form onSubmit={handleLogin}>\r\n                <TextField\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    value={username}\r\n                    onChange={e => setUsername(e.target.value)}\r\n                    required\r\n                />\r\n                <TextField\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Login\r\n                </Button>\r\n                {isError && (\r\n                    <Typography variant=\"body2\" color=\"error\" sx={{ mt: 2 }}>\r\n                        {message}\r\n                    </Typography>\r\n                )}\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}