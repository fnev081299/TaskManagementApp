{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\components\\\\EditTaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Checkbox, FormControlLabel, Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTaskForm = ({\n  task,\n  onUpdate,\n  onCancel\n}) => {\n  _s();\n  const [title, setTitle] = useState(task.title);\n  const [description, setDescription] = useState(task.description);\n  const [status, setStatus] = useState(task.status);\n  const handleSubmit = e => {\n    e.preventDefault();\n    onUpdate({\n      ...task,\n      title,\n      description,\n      status\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      marginTop: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Title\",\n      variant: \"outlined\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true,\n      fullWidth: true,\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Description\",\n      variant: \"outlined\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      required: true,\n      multiline: true,\n      rows: 4,\n      fullWidth: true,\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: status === 'Completed',\n        onChange: e => setStatus(e.target.checked ? 'Completed' : 'Pending')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this),\n      label: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        marginRight: 1\n      },\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(EditTaskForm, \"WSJIzBwa0HBNH4MTAakYHKVMGbU=\");\n_c = EditTaskForm;\nexport default EditTaskForm;\nvar _c;\n$RefreshReg$(_c, \"EditTaskForm\");","map":{"version":3,"names":["React","useState","TextField","Button","Checkbox","FormControlLabel","Box","Typography","jsxDEV","_jsxDEV","EditTaskForm","task","onUpdate","onCancel","_s","title","setTitle","description","setDescription","status","setStatus","handleSubmit","e","preventDefault","component","onSubmit","sx","marginTop","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","target","required","fullWidth","marginBottom","multiline","rows","control","checked","type","color","marginRight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/components/EditTaskForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Task } from '../interfaces/Task';\r\nimport { TextField, Button, Checkbox, FormControlLabel, Box, Typography } from '@mui/material';\r\n\r\ninterface EditTaskFormProps {\r\n    task: Task;\r\n    onUpdate: (task: Task) => void;\r\n    onCancel: () => void;\r\n}\r\n\r\nconst EditTaskForm: React.FC<EditTaskFormProps> = ({ task, onUpdate, onCancel }) => {\r\n    const [title, setTitle] = useState<string>(task.title);\r\n    const [description, setDescription] = useState<string>(task.description);\r\n    const [status, setStatus] = useState<'Pending' | 'InProgress' | 'Completed'>(task.status);\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        onUpdate({ ...task, title, description, status });\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ marginTop: 4 }}>\r\n            <Typography variant=\"h6\">Edit Task</Typography>\r\n            <TextField\r\n                label=\"Title\"\r\n                variant=\"outlined\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                required\r\n                fullWidth\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <TextField\r\n                label=\"Description\"\r\n                variant=\"outlined\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                required\r\n                multiline\r\n                rows={4}\r\n                fullWidth\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={status === 'Completed'}\r\n                        onChange={(e) => setStatus(e.target.checked ? 'Completed' : 'Pending')}\r\n                    />\r\n                }\r\n                label=\"Done\"\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ marginRight: 1 }}>\r\n                Update Task\r\n            </Button>\r\n            <Button type=\"button\" variant=\"outlined\" color=\"secondary\" onClick={onCancel}>\r\n                Cancel\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default EditTaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}