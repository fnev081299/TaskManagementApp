{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport TaskList from './components/TaskList';\nimport AddTaskForm from './components/AddTaskForm';\nimport RegisterForm from './components/RegisterForm';\nimport Login from './components/Login';\nimport UserProfilePopup from './components/UserProfilePopup';\nimport taskService from './services/taskService';\nimport userService from './services/userService';\nimport { Button, Container, AppBar, Toolbar, Typography, Box, Avatar } from '@mui/material';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [user, setUser] = useState(null); // Declare user state\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n  const [openProfilePopup, setOpenProfilePopup] = useState(false);\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('user');\n    if (loggedInUser) {\n      setUser(JSON.parse(loggedInUser));\n    }\n    loadTasks(); // Ensure tasks are loaded initially\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  const loadTasks = async () => {\n    try {\n      const tasksData = await taskService.getTasksByUserId((user === null || user === void 0 ? void 0 : user.id) || 0); // Use optional chaining to access user.id safely\n      setTasks(tasksData);\n    } catch (error) {\n      console.error('Failed to load tasks:', error);\n    }\n  };\n  const countTasksByStatus = status => {\n    return tasks.filter(task => task.status === status).length;\n  };\n  const handleAddTaskClick = () => {\n    setShowAddTaskForm(true);\n  };\n  const handleUpdateProfilePicture = async file => {\n    try {\n      await userService.updateProfilePicture(file);\n      await loadTasks(); // Reload tasks after updating profile picture\n    } catch (error) {\n      console.error('Error updating profile picture:', error);\n    }\n  };\n  const handleDeleteProfilePicture = async () => {\n    try {\n      await userService.deleteProfilePicture();\n      await loadTasks(); // Reload tasks after deleting profile picture\n    } catch (error) {\n      console.error('Error deleting profile picture:', error);\n    }\n  };\n  const handleProfileClick = () => {\n    setOpenProfilePopup(true);\n  };\n  const handleCloseProfilePopup = () => {\n    setOpenProfilePopup(false);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setUser(null); // Clear user state on logout\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"professional-background left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"professional-background right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              flexGrow: 1\n            },\n            children: \"Task Management App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleProfileClick,\n                sx: {\n                  textTransform: 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: user.username || 'User',\n                  src: user.profilePictureFileName || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"inherit\",\n                onClick: handleLogout,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"inherit\",\n                component: Navigate,\n                to: \"/register\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"inherit\",\n                component: Navigate,\n                to: \"/login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(RegisterForm, {\n              onRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: user ? /*#__PURE__*/_jsxDEV(AuthenticatedApp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 57\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 80\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"g0fPILBsz16y8qOkYatPIYRJD5Y=\");\n_c = App;\nconst AuthenticatedApp = () => {\n  _s2();\n  var _user2, _user3;\n  const [tasks, setTasks] = useState([]);\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n  const [openProfilePopup, setOpenProfilePopup] = useState(false);\n  useEffect(() => {\n    loadTasks();\n  }, []);\n  const loadTasks = async () => {\n    try {\n      var _user;\n      const tasksData = await taskService.getTasksByUserId(((_user = user) === null || _user === void 0 ? void 0 : _user.id) || 0);\n      setTasks(tasksData);\n    } catch (error) {\n      console.error('Failed to load tasks:', error);\n    }\n  };\n  const countTasksByStatus = status => {\n    return tasks.filter(task => task.status === status).length;\n  };\n  const handleAddTaskClick = () => {\n    setShowAddTaskForm(true);\n  };\n  const handleUpdateProfilePicture = async file => {\n    try {\n      await userService.updateProfilePicture(file);\n      await loadTasks();\n    } catch (error) {\n      console.error('Error updating profile picture:', error);\n    }\n  };\n  const handleDeleteProfilePicture = async () => {\n    try {\n      await userService.deleteProfilePicture();\n      await loadTasks();\n    } catch (error) {\n      console.error('Error deleting profile picture:', error);\n    }\n  };\n  const handleProfileClick = () => {\n    setOpenProfilePopup(true);\n  };\n  const handleCloseProfilePopup = () => {\n    setOpenProfilePopup(false);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"task-counters\",\n      sx: {\n        marginTop: 2,\n        padding: 2,\n        backgroundColor: '#f8f9fa',\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Task Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          mx: 2,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-key pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              marginLeft: 1\n            },\n            children: [\"Pending: \", countTasksByStatus('Pending')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          mx: 2,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-key in-progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              marginLeft: 1\n            },\n            children: [\"In Progress: \", countTasksByStatus('InProgress')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          mx: 2,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-key completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              marginLeft: 1\n            },\n            children: [\"Completed: \", countTasksByStatus('Completed')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      sx: {\n        marginTop: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddTaskClick,\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      loadTasks: loadTasks,\n      userId: ((_user2 = user) === null || _user2 === void 0 ? void 0 : _user2.id) || 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), showAddTaskForm && /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      onTaskAdded: loadTasks,\n      onClose: () => setShowAddTaskForm(false),\n      editingTask: null,\n      userId: ((_user3 = user) === null || _user3 === void 0 ? void 0 : _user3.id) || 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(UserProfilePopup, {\n      user: user,\n      open: openProfilePopup,\n      onClose: handleCloseProfilePopup,\n      onUpdateProfilePicture: handleUpdateProfilePicture,\n      onDeleteProfilePicture: handleDeleteProfilePicture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s2(AuthenticatedApp, \"OhlTRCOJIqG7CbvS1UIVOdv+Yw8=\");\n_c2 = AuthenticatedApp;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AuthenticatedApp\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","TaskList","AddTaskForm","RegisterForm","Login","UserProfilePopup","taskService","userService","Button","Container","AppBar","Toolbar","Typography","Box","Avatar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","user","setUser","showAddTaskForm","setShowAddTaskForm","openProfilePopup","setOpenProfilePopup","loggedInUser","localStorage","getItem","JSON","parse","loadTasks","tasksData","getTasksByUserId","id","error","console","countTasksByStatus","status","filter","task","length","handleAddTaskClick","handleUpdateProfilePicture","file","updateProfilePicture","handleDeleteProfilePicture","deleteProfilePicture","handleProfileClick","handleCloseProfilePopup","handleLogout","removeItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","position","variant","component","sx","flexGrow","display","alignItems","onClick","textTransform","alt","username","src","profilePictureFileName","color","to","path","element","onRegister","handleRegister","onLogin","handleLogin","AuthenticatedApp","replace","_c","_s2","_user2","_user3","_user","marginTop","padding","backgroundColor","borderRadius","gutterBottom","justifyContent","mx","marginLeft","userId","onTaskAdded","onClose","editingTask","open","onUpdateProfilePicture","onDeleteProfilePicture","_c2","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport TaskList from './components/TaskList';\r\nimport AddTaskForm from './components/AddTaskForm';\r\nimport RegisterForm from './components/RegisterForm';\r\nimport Login from './components/Login';\r\nimport UserProfilePopup from './components/UserProfilePopup';\r\nimport taskService from './services/taskService';\r\nimport userService from './services/userService';\r\nimport { Task } from './interfaces/Task';\r\nimport { User } from './interfaces/User';\r\nimport { Button, Container, AppBar, Toolbar, Typography, Box, Avatar } from '@mui/material';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles.css';\r\n\r\nconst App: React.FC = () => {\r\n    const [tasks, setTasks] = useState<Task[]>([]);\r\n    const [user, setUser] = useState<User | null>(null); // Declare user state\r\n    const [showAddTaskForm, setShowAddTaskForm] = useState<boolean>(false);\r\n    const [openProfilePopup, setOpenProfilePopup] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        const loggedInUser = localStorage.getItem('user');\r\n        if (loggedInUser) {\r\n            setUser(JSON.parse(loggedInUser));\r\n        }\r\n        loadTasks(); // Ensure tasks are loaded initially\r\n    }, []); // Empty dependency array means this effect runs once on mount\r\n\r\n    const loadTasks = async () => {\r\n        try {\r\n            const tasksData = await taskService.getTasksByUserId(user?.id || 0); // Use optional chaining to access user.id safely\r\n            setTasks(tasksData);\r\n        } catch (error) {\r\n            console.error('Failed to load tasks:', error);\r\n        }\r\n    };\r\n\r\n    const countTasksByStatus = (status: string) => {\r\n        return tasks.filter(task => task.status === status).length;\r\n    };\r\n\r\n    const handleAddTaskClick = () => {\r\n        setShowAddTaskForm(true);\r\n    };\r\n\r\n    const handleUpdateProfilePicture = async (file: File) => {\r\n        try {\r\n            await userService.updateProfilePicture(file);\r\n            await loadTasks(); // Reload tasks after updating profile picture\r\n        } catch (error) {\r\n            console.error('Error updating profile picture:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteProfilePicture = async () => {\r\n        try {\r\n            await userService.deleteProfilePicture();\r\n            await loadTasks(); // Reload tasks after deleting profile picture\r\n        } catch (error) {\r\n            console.error('Error deleting profile picture:', error);\r\n        }\r\n    };\r\n\r\n    const handleProfileClick = () => {\r\n        setOpenProfilePopup(true);\r\n    };\r\n\r\n    const handleCloseProfilePopup = () => {\r\n        setOpenProfilePopup(false);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('user');\r\n        setUser(null); // Clear user state on logout\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"professional-background left\"></div>\r\n            <div className=\"professional-background right\"></div>\r\n            <Container maxWidth=\"md\" className=\"content-container\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            Task Management App\r\n                        </Typography>\r\n                        <Box display=\"flex\" alignItems=\"center\">\r\n                            {user ? (\r\n                                <>\r\n                                    <Button onClick={handleProfileClick} sx={{ textTransform: 'none' }}>\r\n                                        <Avatar alt={user.username || 'User'} src={user.profilePictureFileName || ''} />\r\n                                    </Button>\r\n                                    <Button color=\"inherit\" onClick={handleLogout}>Logout</Button>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <Button color=\"inherit\" component={Navigate} to=\"/register\">Register</Button>\r\n                                    <Button color=\"inherit\" component={Navigate} to=\"/login\">Login</Button>\r\n                                </>\r\n                            )}\r\n                        </Box>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <main>\r\n                    <Routes>\r\n                        <Route path=\"/register\" element={<RegisterForm onRegister={handleRegister} />} />\r\n                        <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n                        <Route path=\"/\" element={user ? <AuthenticatedApp /> : <Navigate to=\"/login\" replace />} />\r\n                    </Routes>\r\n                </main>\r\n            </Container>\r\n        </Router>\r\n    );\r\n};\r\n\r\nconst AuthenticatedApp: React.FC = () => {\r\n    const [tasks, setTasks] = useState<Task[]>([]);\r\n    const [showAddTaskForm, setShowAddTaskForm] = useState<boolean>(false);\r\n    const [openProfilePopup, setOpenProfilePopup] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        loadTasks();\r\n    }, []);\r\n\r\n    const loadTasks = async () => {\r\n        try {\r\n            const tasksData = await taskService.getTasksByUserId(user?.id || 0);\r\n            setTasks(tasksData);\r\n        } catch (error) {\r\n            console.error('Failed to load tasks:', error);\r\n        }\r\n    };\r\n\r\n    const countTasksByStatus = (status: string) => {\r\n        return tasks.filter(task => task.status === status).length;\r\n    };\r\n\r\n    const handleAddTaskClick = () => {\r\n        setShowAddTaskForm(true);\r\n    };\r\n\r\n    const handleUpdateProfilePicture = async (file: File) => {\r\n        try {\r\n            await userService.updateProfilePicture(file);\r\n            await loadTasks();\r\n        } catch (error) {\r\n            console.error('Error updating profile picture:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteProfilePicture = async () => {\r\n        try {\r\n            await userService.deleteProfilePicture();\r\n            await loadTasks();\r\n        } catch (error) {\r\n            console.error('Error deleting profile picture:', error);\r\n        }\r\n    };\r\n\r\n    const handleProfileClick = () => {\r\n        setOpenProfilePopup(true);\r\n    };\r\n\r\n    const handleCloseProfilePopup = () => {\r\n        setOpenProfilePopup(false);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('user');\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box className=\"task-counters\" sx={{ marginTop: 2, padding: 2, backgroundColor: '#f8f9fa', borderRadius: 2 }}>\r\n                <Typography variant=\"h5\" gutterBottom>Task Status</Typography>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <Box display=\"flex\" alignItems=\"center\" mx={2}>\r\n                        <span className=\"status-key pending\"></span>\r\n                        <Typography variant=\"body1\" sx={{ marginLeft: 1 }}>Pending: {countTasksByStatus('Pending')}</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" alignItems=\"center\" mx={2}>\r\n                        <span className=\"status-key in-progress\"></span>\r\n                        <Typography variant=\"body1\" sx={{ marginLeft: 1 }}>In Progress: {countTasksByStatus('InProgress')}</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" alignItems=\"center\" mx={2}>\r\n                        <span className=\"status-key completed\"></span>\r\n                        <Typography variant=\"body1\" sx={{ marginLeft: 1 }}>Completed: {countTasksByStatus('Completed')}</Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"center\" sx={{ marginTop: 2 }}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleAddTaskClick}>\r\n                    Add New Task\r\n                </Button>\r\n            </Box>\r\n            <TaskList tasks={tasks} loadTasks={loadTasks} userId={user?.id || 0} />\r\n            {showAddTaskForm && (\r\n                <AddTaskForm \r\n                    onTaskAdded={loadTasks} \r\n                    onClose={() => setShowAddTaskForm(false)} \r\n                    editingTask={null}\r\n                    userId={user?.id || 0}\r\n                />\r\n            )}\r\n            <UserProfilePopup\r\n                user={user}\r\n                open={openProfilePopup}\r\n                onClose={handleCloseProfilePopup}\r\n                onUpdateProfilePicture={handleUpdateProfilePicture}\r\n                onDeleteProfilePicture={handleDeleteProfilePicture}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}