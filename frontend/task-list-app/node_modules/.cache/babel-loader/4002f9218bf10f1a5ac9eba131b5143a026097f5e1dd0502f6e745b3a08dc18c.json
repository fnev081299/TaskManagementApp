{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\components\\\\RegisterForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport userService from '../services/userService';\nimport './forms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = ({\n  onRegister\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isError, setIsError] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userData = {\n      id: 0,\n      // Ensure id is set to 0\n      username,\n      email,\n      passwordHash: password,\n      profilePictureFileName: ''\n    };\n    try {\n      const response = await userService.register(userData);\n      onRegister(response); // Pass the user data to the parent component\n      setMessage('Registration successful!');\n      setIsError(false);\n    } catch (error) {\n      setMessage('Registration failed. Please check your details.');\n      setIsError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"register-form\",\n    component: \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      fullWidth: true,\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      required: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      type: \"email\",\n      fullWidth: true,\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      type: \"password\",\n      fullWidth: true,\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n      color: isError ? 'error' : 'primary',\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterForm, \"o8F+c4ZGcJ26gkj7lhTIFWFJ9eY=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","TextField","Button","Box","Typography","userService","jsxDEV","_jsxDEV","RegisterForm","onRegister","_s","username","setUsername","email","setEmail","password","setPassword","message","setMessage","isError","setIsError","handleSubmit","e","preventDefault","userData","id","passwordHash","profilePictureFileName","response","register","error","className","component","onSubmit","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","target","required","margin","type","color","_c","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/components/RegisterForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Box, Typography } from '@mui/material';\r\nimport userService from '../services/userService';\r\nimport { User } from '../interfaces/User';\r\nimport './forms.css';\r\n\r\ninterface RegisterFormProps {\r\n    onRegister: (user: User) => void;\r\n}\r\n\r\nconst RegisterForm: React.FC<RegisterFormProps> = ({ onRegister }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const userData: User = {\r\n            id: 0, // Ensure id is set to 0\r\n            username,\r\n            email,\r\n            passwordHash: password,\r\n            profilePictureFileName: ''\r\n        };\r\n\r\n        try {\r\n            const response = await userService.register(userData);\r\n            onRegister(response); // Pass the user data to the parent component\r\n            setMessage('Registration successful!');\r\n            setIsError(false);\r\n        } catch (error) {\r\n            setMessage('Registration failed. Please check your details.');\r\n            setIsError(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box className=\"register-form\" component=\"form\" onSubmit={handleSubmit}>\r\n            <Typography variant=\"h6\">Register</Typography>\r\n            <TextField\r\n                label=\"Username\"\r\n                fullWidth\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                required\r\n                margin=\"normal\"\r\n            />\r\n            <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                fullWidth\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n                margin=\"normal\"\r\n            />\r\n            <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n                margin=\"normal\"\r\n            />\r\n            {message && (\r\n                <Typography color={isError ? 'error' : 'primary'}>{message}</Typography>\r\n            )}\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Register\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}