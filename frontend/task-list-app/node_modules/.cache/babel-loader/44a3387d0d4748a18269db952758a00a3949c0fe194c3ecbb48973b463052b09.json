{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\components\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { List, ListItem, ListItemText, IconButton, Box } from '@mui/material';\nimport taskService from '../services/taskService';\nimport EditTaskForm from './EditTaskForm';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  loadTasks\n}) => {\n  _s();\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const handleEditClick = taskId => {\n    setEditingTaskId(taskId);\n  };\n  const handleUpdate = async updatedTask => {\n    try {\n      await taskService.updateTask(updatedTask);\n      setEditingTaskId(null);\n      loadTasks();\n    } catch (error) {\n      console.error('Failed to update task:', error);\n    }\n  };\n  const handleCancel = () => {\n    setEditingTaskId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n      className: \"task-item\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(EditTaskForm, {\n          task: task,\n          onUpdate: handleUpdate,\n          onCancel: handleCancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: task.title,\n            secondary: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status-key ${task.status.toLowerCase()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleEditClick(task.id),\n                children: \"\\u270F\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => taskService.deleteTask(task.id).then(loadTasks),\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"2CbmjkQ51OKpmXbFz+uXzkSDiKM=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","List","ListItem","ListItemText","IconButton","Box","taskService","EditTaskForm","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","tasks","loadTasks","_s","editingTaskId","setEditingTaskId","handleEditClick","taskId","handleUpdate","updatedTask","updateTask","error","console","handleCancel","children","map","task","className","display","flexDirection","width","id","onUpdate","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","primary","title","secondary","description","alignItems","justifyContent","status","toLowerCase","onClick","deleteTask","then","_c","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/components/TaskList.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { List, ListItem, ListItemText, IconButton, Box } from '@mui/material';\r\nimport { Task } from '../interfaces/Task';\r\nimport taskService from '../services/taskService';\r\nimport EditTaskForm from './EditTaskForm';\r\nimport '../styles.css';\r\n\r\ninterface TaskListProps {\r\n  tasks: Task[];\r\n  loadTasks: () => void;\r\n}\r\n\r\nconst TaskList: React.FC<TaskListProps> = ({ tasks, loadTasks }) => {\r\n  const [editingTaskId, setEditingTaskId] = useState<number | null>(null);\r\n\r\n  const handleEditClick = (taskId: number) => {\r\n    setEditingTaskId(taskId);\r\n  };\r\n\r\n  const handleUpdate = async (updatedTask: Task) => {\r\n    try {\r\n      await taskService.updateTask(updatedTask);\r\n      setEditingTaskId(null);\r\n      loadTasks();\r\n    } catch (error) {\r\n      console.error('Failed to update task:', error);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditingTaskId(null);\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      {tasks.map((task) => (\r\n        <ListItem key={task.id} className=\"task-item\">\r\n          <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n            {editingTaskId === task.id ? (\r\n              <EditTaskForm task={task} onUpdate={handleUpdate} onCancel={handleCancel} />\r\n            ) : (\r\n              <>\r\n                <ListItemText primary={task.title} secondary={task.description} />\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <span className={`status-key ${task.status.toLowerCase()}`}></span>\r\n                    <span>{task.status}</span>\r\n                  </Box>\r\n                  <Box>\r\n                    <IconButton onClick={() => handleEditClick(task.id)}>‚úèÔ∏è</IconButton>\r\n                    <IconButton onClick={() => taskService.deleteTask(task.id).then(loadTasks)}>üóëÔ∏è</IconButton>\r\n                  </Box>\r\n                </Box>\r\n              </>\r\n            )}\r\n          </Box>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}