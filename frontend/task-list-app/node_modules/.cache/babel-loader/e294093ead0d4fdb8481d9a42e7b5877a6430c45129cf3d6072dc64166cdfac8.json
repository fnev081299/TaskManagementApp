{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\components\\\\AddTaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport taskService from '../services/taskService';\nimport { TextField, Button, Box } from '@mui/material';\nimport '../forms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskForm = ({\n  onTaskAdded,\n  onClose,\n  userId\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('Pending');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newTask = {\n      title,\n      description,\n      status,\n      userId\n    };\n    try {\n      await taskService.createTask(newTask);\n      onTaskAdded();\n      onClose();\n    } catch (error) {\n      console.error('Failed to add task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      marginTop: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Title\",\n      variant: \"outlined\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true,\n      fullWidth: true,\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Description\",\n      variant: \"outlined\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      required: true,\n      multiline: true,\n      rows: 4,\n      fullWidth: true,\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        marginRight: 1\n      },\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AddTaskForm, \"YQvG7zK77aCvF8kq2LN9xAhBvKY=\");\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useState","taskService","TextField","Button","Box","jsxDEV","_jsxDEV","AddTaskForm","onTaskAdded","onClose","userId","_s","title","setTitle","description","setDescription","status","setStatus","handleSubmit","e","preventDefault","newTask","createTask","error","console","component","onSubmit","sx","marginTop","children","label","variant","value","onChange","target","required","fullWidth","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","multiline","rows","type","color","marginRight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/components/AddTaskForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Task } from '../interfaces/Task';\r\nimport taskService from '../services/taskService';\r\nimport { TextField, Button, Box } from '@mui/material';\r\nimport '../forms.css';\r\n\r\ninterface AddTaskFormProps {\r\n    onTaskAdded: () => void;\r\n    onClose: () => void;\r\n    userId: number;\r\n}\r\n\r\nconst AddTaskForm: React.FC<AddTaskFormProps> = ({ onTaskAdded, onClose, userId }) => {\r\n    const [title, setTitle] = useState<string>('');\r\n    const [description, setDescription] = useState<string>('');\r\n    const [status, setStatus] = useState<'Pending' | 'InProgress' | 'Completed'>('Pending');\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const newTask: Partial<Task> = {\r\n            title,\r\n            description,\r\n            status,\r\n            userId\r\n        };\r\n        try {\r\n            await taskService.createTask(newTask as Task);\r\n            onTaskAdded();\r\n            onClose();\r\n        } catch (error) {\r\n            console.error('Failed to add task:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ marginTop: 4 }}>\r\n            <TextField\r\n                label=\"Title\"\r\n                variant=\"outlined\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                required\r\n                fullWidth\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <TextField\r\n                label=\"Description\"\r\n                variant=\"outlined\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                required\r\n                multiline\r\n                rows={4}\r\n                fullWidth\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ marginRight: 1 }}>Add Task</Button>\r\n            <Button type=\"button\" variant=\"outlined\" color=\"secondary\" onClick={onClose}>Cancel</Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default AddTaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}