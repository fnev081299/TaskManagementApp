{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\components\\\\AddTaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Box } from '@mui/material';\nimport taskService from '../services/taskService';\nimport '../forms.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskForm = ({\n  onTaskAdded,\n  onClose,\n  editingTask\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('Pending');\n  useEffect(() => {\n    if (editingTask) {\n      setTitle(editingTask.title);\n      setDescription(editingTask.description);\n      setStatus(editingTask.status);\n    }\n  }, [editingTask]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newTask = {\n      id: editingTask ? editingTask.id : 0,\n      title,\n      description,\n      status,\n      userId: 1 // Set the correct user ID if needed\n    };\n    try {\n      if (editingTask) {\n        await taskService.updateTask(newTask.id, newTask);\n      } else {\n        await taskService.createTask(newTask);\n      }\n      await onTaskAdded(newTask.userId);\n      onClose();\n    } catch (error) {\n      console.error('Failed to save task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      marginTop: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      fullWidth: true,\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      fullWidth: true,\n      multiline: true,\n      rows: 4,\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Status\",\n      value: status,\n      onChange: e => setStatus(e.target.value),\n      fullWidth: true,\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        marginRight: 1\n      },\n      children: editingTask ? 'Update Task' : 'Add Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(AddTaskForm, \"tKJnd01tHOvTOAP9G3FReBbXbTY=\");\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Box","taskService","jsxDEV","_jsxDEV","AddTaskForm","onTaskAdded","onClose","editingTask","_s","title","setTitle","description","setDescription","status","setStatus","handleSubmit","e","preventDefault","newTask","id","userId","updateTask","createTask","error","console","component","onSubmit","sx","marginTop","children","label","value","onChange","target","fullWidth","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","multiline","rows","type","variant","color","marginRight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/components/AddTaskForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Box } from '@mui/material';\r\nimport taskService from '../services/taskService';\r\nimport { Task } from '../interfaces/Task';\r\nimport '../forms.css'; // Import the CSS file\r\n\r\ninterface AddTaskFormProps {\r\n    onTaskAdded: (userId: number) => Promise<void>;\r\n    onClose: () => void;\r\n    editingTask?: Task | null;\r\n}\r\n\r\nconst AddTaskForm: React.FC<AddTaskFormProps> = ({ onTaskAdded, onClose, editingTask }) => {\r\n    const [title, setTitle] = useState<string>('');\r\n    const [description, setDescription] = useState<string>('');\r\n    const [status, setStatus] = useState<'Pending' | 'InProgress' | 'Completed'>('Pending');\r\n\r\n    useEffect(() => {\r\n        if (editingTask) {\r\n            setTitle(editingTask.title);\r\n            setDescription(editingTask.description);\r\n            setStatus(editingTask.status);\r\n        }\r\n    }, [editingTask]);\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        const newTask: Task = {\r\n            id: editingTask ? editingTask.id : 0,\r\n            title,\r\n            description,\r\n            status,\r\n            userId: 1 // Set the correct user ID if needed\r\n        };\r\n\r\n        try {\r\n            if (editingTask) {\r\n                await taskService.updateTask(newTask.id, newTask);\r\n            } else {\r\n                await taskService.createTask(newTask);\r\n            }\r\n            await onTaskAdded(newTask.userId);\r\n            onClose();\r\n        } catch (error) {\r\n            console.error('Failed to save task:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ marginTop: 2 }}>\r\n            <TextField\r\n                label=\"Title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                fullWidth\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <TextField\r\n                label=\"Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                fullWidth\r\n                multiline\r\n                rows={4}\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <TextField\r\n                label=\"Status\"\r\n                value={status}\r\n                onChange={(e) => setStatus(e.target.value as 'Pending' | 'InProgress' | 'Completed')}\r\n                fullWidth\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ marginRight: 1 }}>\r\n                {editingTask ? 'Update Task' : 'Add Task'}\r\n            </Button>\r\n            <Button type=\"button\" variant=\"outlined\" color=\"secondary\" onClick={onClose}>\r\n                Cancel\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default AddTaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}