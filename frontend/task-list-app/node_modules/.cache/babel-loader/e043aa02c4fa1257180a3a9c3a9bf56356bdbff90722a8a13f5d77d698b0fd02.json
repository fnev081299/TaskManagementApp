{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\components\\\\RegisterForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Box } from '@mui/material';\nimport userService from '../services/userService';\nimport '../forms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = ({\n  onRegister\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isError, setIsError] = useState(false);\n  const handleRegister = async e => {\n    e.preventDefault();\n    const userData = {\n      username,\n      email,\n      passwordHash: password,\n      profilePictureFileName: '' // Optional, include if necessary\n    };\n    try {\n      const registeredUser = await userService.register(userData);\n      onRegister(registeredUser);\n    } catch (error) {\n      console.error('Registration failed:', error);\n      setMessage('Registration failed. Please try again.');\n      setIsError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 400,\n      mx: 'auto',\n      mt: 4,\n      p: 2,\n      boxShadow: 1,\n      borderRadius: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"username\",\n        label: \"Username\",\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"email\",\n        label: \"Email\",\n        type: \"email\",\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), isError && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"error\",\n        sx: {\n          mt: 2\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterForm, \"o8F+c4ZGcJ26gkj7lhTIFWFJ9eY=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Box","userService","jsxDEV","_jsxDEV","RegisterForm","onRegister","_s","username","setUsername","email","setEmail","password","setPassword","message","setMessage","isError","setIsError","handleRegister","e","preventDefault","userData","passwordHash","profilePictureFileName","registeredUser","register","error","console","sx","maxWidth","mx","mt","p","boxShadow","borderRadius","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","label","fullWidth","margin","value","onChange","target","required","type","color","_c","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/components/RegisterForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Box } from '@mui/material';\r\nimport { User } from '../interfaces/User';\r\nimport userService from '../services/userService';\r\nimport '../forms.css';\r\n\r\ninterface RegisterFormProps {\r\n    onRegister: (user: User) => void;\r\n}\r\n\r\nconst RegisterForm: React.FC<RegisterFormProps> = ({ onRegister }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const handleRegister = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const userData: Partial<User> = {\r\n            username,\r\n            email,\r\n            passwordHash: password,\r\n            profilePictureFileName: '' // Optional, include if necessary\r\n        };\r\n\r\n        try {\r\n            const registeredUser = await userService.register(userData);\r\n            onRegister(registeredUser);\r\n        } catch (error) {\r\n            console.error('Registration failed:', error);\r\n            setMessage('Registration failed. Please try again.');\r\n            setIsError(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ maxWidth: 400, mx: 'auto', mt: 4, p: 2, boxShadow: 1, borderRadius: 1 }}>\r\n            <Typography variant=\"h5\" gutterBottom>Register</Typography>\r\n            <form onSubmit={handleRegister}>\r\n                <TextField\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    value={username}\r\n                    onChange={e => setUsername(e.target.value)}\r\n                    required\r\n                />\r\n                <TextField\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <TextField\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Register\r\n                </Button>\r\n                {isError && (\r\n                    <Typography variant=\"body2\" color=\"error\" sx={{ mt: 2 }}>\r\n                        {message}\r\n                    </Typography>\r\n                )}\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}