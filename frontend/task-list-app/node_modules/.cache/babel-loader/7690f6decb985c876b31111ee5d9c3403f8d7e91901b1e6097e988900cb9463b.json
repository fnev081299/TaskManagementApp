{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\components\\\\AddTaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport taskService from '../services/taskService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskForm = ({\n  onTaskAdded,\n  onClose,\n  userId\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('Pending');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newTask = {\n      id: 0,\n      title,\n      description,\n      status,\n      userId\n    };\n    try {\n      await taskService.createTask(newTask);\n      await onTaskAdded();\n      onClose();\n    } catch (error) {\n      console.error('Failed to add task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      marginTop: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Title\",\n      variant: \"outlined\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true,\n      fullWidth: true,\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Description\",\n      variant: \"outlined\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      required: true,\n      multiline: true,\n      rows: 4,\n      fullWidth: true,\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        marginRight: 1\n      },\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AddTaskForm, \"YQvG7zK77aCvF8kq2LN9xAhBvKY=\");\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useState","TextField","Button","Box","Typography","taskService","jsxDEV","_jsxDEV","AddTaskForm","onTaskAdded","onClose","userId","_s","title","setTitle","description","setDescription","status","setStatus","handleSubmit","e","preventDefault","newTask","id","createTask","error","console","component","onSubmit","sx","marginTop","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","target","required","fullWidth","marginBottom","multiline","rows","type","color","marginRight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/components/AddTaskForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Task } from '../interfaces/Task';\r\nimport { TextField, Button, Box, Typography } from '@mui/material';\r\nimport taskService from '../services/taskService';\r\n\r\ninterface AddTaskFormProps {\r\n    onTaskAdded: () => Promise<void>;\r\n    onClose: () => void;\r\n    userId: number;\r\n}\r\n\r\nconst AddTaskForm: React.FC<AddTaskFormProps> = ({ onTaskAdded, onClose, userId }) => {\r\n    const [title, setTitle] = useState<string>('');\r\n    const [description, setDescription] = useState<string>('');\r\n    const [status, setStatus] = useState<'Pending' | 'InProgress' | 'Completed'>('Pending');\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const newTask: Task = {\r\n            id: 0,\r\n            title,\r\n            description,\r\n            status,\r\n            userId,\r\n        };\r\n        try {\r\n            await taskService.createTask(newTask);\r\n            await onTaskAdded();\r\n            onClose();\r\n        } catch (error) {\r\n            console.error('Failed to add task:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ marginTop: 4 }}>\r\n            <Typography variant=\"h6\">Add Task</Typography>\r\n            <TextField\r\n                label=\"Title\"\r\n                variant=\"outlined\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                required\r\n                fullWidth\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <TextField\r\n                label=\"Description\"\r\n                variant=\"outlined\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                required\r\n                multiline\r\n                rows={4}\r\n                fullWidth\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ marginRight: 1 }}>Add Task</Button>\r\n            <Button type=\"button\" variant=\"outlined\" color=\"secondary\" onClick={onClose}>Cancel</Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default AddTaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}