{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\components\\\\RegisterForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Typography } from '@mui/material';\nimport userService from '../services/userService';\nimport './RegisterForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = ({\n  open,\n  onClose\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleRegister = async () => {\n    try {\n      await userService.register({\n        username,\n        email,\n        password\n      });\n      onClose();\n    } catch (error) {\n      console.error('Failed to register:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    className: \"register-dialog\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: \"register-title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRegister,\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"register-button\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        className: \"close-button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"tRYla3vCO/TiaNXVkXSQty2VxO8=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Typography","userService","jsxDEV","_jsxDEV","RegisterForm","open","onClose","_s","username","setUsername","email","setEmail","password","setPassword","handleRegister","register","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","label","value","onChange","e","target","fullWidth","margin","type","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/components/RegisterForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Typography } from '@mui/material';\r\nimport userService from '../services/userService';\r\nimport './RegisterForm.css';\r\n\r\ninterface RegisterFormProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst RegisterForm: React.FC<RegisterFormProps> = ({ open, onClose }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      await userService.register({ username, email, password });\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Failed to register:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} className=\"register-dialog\">\r\n      <DialogTitle>Register</DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"h6\" className=\"register-title\">Register</Typography>\r\n        <form className=\"register-form\">\r\n          <TextField\r\n            label=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <Button onClick={handleRegister} variant=\"contained\" color=\"primary\" className=\"register-button\">\r\n            Register\r\n          </Button>\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} className=\"close-button\">Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}