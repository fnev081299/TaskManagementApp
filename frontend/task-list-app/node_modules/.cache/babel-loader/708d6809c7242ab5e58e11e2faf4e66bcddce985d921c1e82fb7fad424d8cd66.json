{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\components\\\\AddTaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Box } from '@mui/material';\nimport taskService from '../services/taskService';\nimport '../forms.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskForm = ({\n  onTaskAdded,\n  onClose,\n  editingTask\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('Pending');\n  useEffect(() => {\n    if (editingTask) {\n      setTitle(editingTask.title);\n      setDescription(editingTask.description);\n      setStatus(editingTask.status);\n    }\n  }, [editingTask]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newTask = {\n      id: editingTask ? editingTask.id : 0,\n      // If editing, use the existing ID\n      title,\n      description,\n      status: 'Pending',\n      // Set default status to 'Pending'\n      userId: editingTask ? editingTask.userId : 0 // Adjust this based on your logic for user ID\n    };\n    try {\n      if (editingTask) {\n        await taskService.updateTask(newTask);\n      } else {\n        await taskService.createTask(newTask);\n      }\n      onTaskAdded();\n      onClose();\n    } catch (error) {\n      console.error('Failed to save task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Title\",\n        variant: \"outlined\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"form-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Description\",\n        variant: \"outlined\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        className: \"form-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        className: \"form-button\",\n        children: editingTask ? 'Update Task' : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: onClose,\n        className: \"form-button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTaskForm, \"tKJnd01tHOvTOAP9G3FReBbXbTY=\");\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Box","taskService","jsxDEV","_jsxDEV","AddTaskForm","onTaskAdded","onClose","editingTask","_s","title","setTitle","description","setDescription","status","setStatus","handleSubmit","e","preventDefault","newTask","id","userId","updateTask","createTask","error","console","className","children","onSubmit","label","variant","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","color","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/components/AddTaskForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Box, MenuItem } from '@mui/material';\r\nimport taskService from '../services/taskService';\r\nimport { Task } from '../interfaces/Task';\r\nimport '../forms.css'; // Import the CSS file\r\n\r\ninterface AddTaskFormProps {\r\n  onTaskAdded: () => void;\r\n  onClose: () => void;\r\n  editingTask: Task | null;\r\n}\r\n\r\nconst AddTaskForm: React.FC<AddTaskFormProps> = ({ onTaskAdded, onClose, editingTask }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState<'Pending' | 'InProgress' | 'Completed'>('Pending');\r\n\r\n  useEffect(() => {\r\n    if (editingTask) {\r\n      setTitle(editingTask.title);\r\n      setDescription(editingTask.description);\r\n      setStatus(editingTask.status);\r\n    }\r\n  }, [editingTask]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const newTask: Task = {\r\n      id: editingTask ? editingTask.id : 0, // If editing, use the existing ID\r\n      title,\r\n      description,\r\n      status: 'Pending', // Set default status to 'Pending'\r\n      userId: editingTask ? editingTask.userId : 0 // Adjust this based on your logic for user ID\r\n    };\r\n\r\n    try {\r\n      if (editingTask) {\r\n        await taskService.updateTask(newTask);\r\n      } else {\r\n        await taskService.createTask(newTask);\r\n      }\r\n      onTaskAdded();\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Failed to save task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className=\"form-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Title\"\r\n          variant=\"outlined\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          className=\"form-field\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Description\"\r\n          variant=\"outlined\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          className=\"form-field\"\r\n          required\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          className=\"form-button\"\r\n        >\r\n          {editingTask ? 'Update Task' : 'Add Task'}\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          onClick={onClose}\r\n          className=\"form-button\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}