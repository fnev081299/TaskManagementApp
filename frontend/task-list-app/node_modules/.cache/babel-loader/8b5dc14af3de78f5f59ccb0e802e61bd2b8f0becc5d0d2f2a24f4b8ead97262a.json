{"ast":null,"code":"import api from './api';\nconst getUser = async () => {\n  const response = await api.get('/users/current-user');\n  return response.data;\n};\nconst updateProfilePicture = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  await api.post('/users/profile-picture', formData);\n};\nconst deleteProfilePicture = async () => {\n  await api.delete('/users/profile-picture');\n};\nconst register = async user => {\n  const response = await api.post('/users/register', user);\n  return response.data;\n};\nconst login = async credentials => {\n  const response = await api.post('/users/login', credentials);\n  return response.data;\n};\nconst getCurrentUser = async () => {\n  const response = await api.get('/users/current-user');\n  return response.data;\n};\nexport default {\n  getUser,\n  updateProfilePicture,\n  deleteProfilePicture,\n  register,\n  login,\n  getCurrentUser\n};","map":{"version":3,"names":["api","getUser","response","get","data","updateProfilePicture","file","formData","FormData","append","post","deleteProfilePicture","delete","register","user","login","credentials","getCurrentUser"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/services/userService.ts"],"sourcesContent":["import api from './api';\r\nimport { User } from '../interfaces/User';\r\n\r\nconst getUser = async (): Promise<User> => {\r\n    const response = await api.get('/users/current-user');\r\n    return response.data;\r\n};\r\n\r\nconst updateProfilePicture = async (file: File): Promise<void> => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    await api.post('/users/profile-picture', formData);\r\n};\r\n\r\nconst deleteProfilePicture = async (): Promise<void> => {\r\n    await api.delete('/users/profile-picture');\r\n};\r\n\r\nconst register = async (user: User): Promise<User> => {\r\n    const response = await api.post('/users/register', user);\r\n    return response.data;\r\n};\r\n\r\nconst login = async (credentials: { email: string, passwordHash: string }): Promise<User> => {\r\n    const response = await api.post('/users/login', credentials);\r\n    return response.data;\r\n};\r\n\r\nconst getCurrentUser = async (): Promise<User> => {\r\n    const response = await api.get('/users/current-user');\r\n    return response.data;\r\n};\r\n\r\nexport default {\r\n    getUser,\r\n    updateProfilePicture,\r\n    deleteProfilePicture,\r\n    register,\r\n    login,\r\n    getCurrentUser,\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAA2B;EACvC,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,qBAAqB,CAAC;EACrD,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMC,oBAAoB,GAAG,MAAOC,IAAU,IAAoB;EAC9D,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAC7B,MAAMN,GAAG,CAACU,IAAI,CAAC,wBAAwB,EAAEH,QAAQ,CAAC;AACtD,CAAC;AAED,MAAMI,oBAAoB,GAAG,MAAAA,CAAA,KAA2B;EACpD,MAAMX,GAAG,CAACY,MAAM,CAAC,wBAAwB,CAAC;AAC9C,CAAC;AAED,MAAMC,QAAQ,GAAG,MAAOC,IAAU,IAAoB;EAClD,MAAMZ,QAAQ,GAAG,MAAMF,GAAG,CAACU,IAAI,CAAC,iBAAiB,EAAEI,IAAI,CAAC;EACxD,OAAOZ,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMW,KAAK,GAAG,MAAOC,WAAoD,IAAoB;EACzF,MAAMd,QAAQ,GAAG,MAAMF,GAAG,CAACU,IAAI,CAAC,cAAc,EAAEM,WAAW,CAAC;EAC5D,OAAOd,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAA2B;EAC9C,MAAMf,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,qBAAqB,CAAC;EACrD,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,eAAe;EACXH,OAAO;EACPI,oBAAoB;EACpBM,oBAAoB;EACpBE,QAAQ;EACRE,KAAK;EACLE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}