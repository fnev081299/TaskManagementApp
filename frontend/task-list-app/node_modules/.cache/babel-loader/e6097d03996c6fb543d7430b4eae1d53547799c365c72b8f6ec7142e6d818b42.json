{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\components\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { List, ListItem, ListItemText, TextField, Select, MenuItem, IconButton, Box, Button } from '@mui/material';\nimport taskService from '../services/taskService';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  loadTasks\n}) => {\n  _s();\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editedTask, setEditedTask] = useState({});\n  const handleEditClick = task => {\n    setEditingTaskId(task.id);\n    setEditedTask(task);\n  };\n  const handleSaveClick = async task => {\n    try {\n      await taskService.updateTask({\n        ...task,\n        ...editedTask\n      });\n      setEditingTaskId(null);\n      loadTasks();\n    } catch (error) {\n      console.error('Failed to update task:', error);\n    }\n  };\n  const handleCancelClick = () => {\n    setEditingTaskId(null);\n    setEditedTask({});\n  };\n  const handleChange = (field, value) => {\n    setEditedTask(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: tasks.map(task => {\n      var _editedTask$title, _editedTask$descripti, _editedTask$status;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        className: \"task-item\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"100%\",\n          children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Title\",\n              variant: \"outlined\",\n              value: (_editedTask$title = editedTask.title) !== null && _editedTask$title !== void 0 ? _editedTask$title : task.title,\n              onChange: e => handleChange('title', e.target.value),\n              className: \"form-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Description\",\n              variant: \"outlined\",\n              value: (_editedTask$descripti = editedTask.description) !== null && _editedTask$descripti !== void 0 ? _editedTask$descripti : task.description,\n              onChange: e => handleChange('description', e.target.value),\n              className: \"form-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: (_editedTask$status = editedTask.status) !== null && _editedTask$status !== void 0 ? _editedTask$status : task.status,\n              onChange: e => handleChange('status', e.target.value),\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"InProgress\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Completed\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleSaveClick(task),\n              variant: \"contained\",\n              color: \"primary\",\n              className: \"form-button\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCancelClick,\n              variant: \"outlined\",\n              color: \"secondary\",\n              className: \"form-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: task.title,\n              secondary: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status-key ${task.status.toLowerCase()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleEditClick(task),\n                children: \"\\u270F\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => taskService.deleteTask(task.id).then(loadTasks),\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"VP9x0BpgQHySjj2DjJ8w4UBAtXU=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","List","ListItem","ListItemText","TextField","Select","MenuItem","IconButton","Box","Button","taskService","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","tasks","loadTasks","_s","editingTaskId","setEditingTaskId","editedTask","setEditedTask","handleEditClick","task","id","handleSaveClick","updateTask","error","console","handleCancelClick","handleChange","field","value","prev","children","map","_editedTask$title","_editedTask$descripti","_editedTask$status","className","display","alignItems","width","label","variant","title","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","description","status","onClick","color","primary","secondary","toLowerCase","deleteTask","then","_c","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/components/TaskList.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { List, ListItem, ListItemText, TextField, Select, MenuItem, IconButton, Box, Button } from '@mui/material';\r\nimport { Task } from '../interfaces/Task';\r\nimport taskService from '../services/taskService';\r\nimport '../styles.css';\r\n\r\ninterface TaskListProps {\r\n  tasks: Task[];\r\n  loadTasks: () => void;\r\n}\r\n\r\nconst TaskList: React.FC<TaskListProps> = ({ tasks, loadTasks }) => {\r\n  const [editingTaskId, setEditingTaskId] = useState<number | null>(null);\r\n  const [editedTask, setEditedTask] = useState<Partial<Task>>({});\r\n\r\n  const handleEditClick = (task: Task) => {\r\n    setEditingTaskId(task.id);\r\n    setEditedTask(task);\r\n  };\r\n\r\n  const handleSaveClick = async (task: Task) => {\r\n    try {\r\n      await taskService.updateTask({ ...task, ...editedTask });\r\n      setEditingTaskId(null);\r\n      loadTasks();\r\n    } catch (error) {\r\n      console.error('Failed to update task:', error);\r\n    }\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditingTaskId(null);\r\n    setEditedTask({});\r\n  };\r\n\r\n  const handleChange = (field: keyof Task, value: any) => {\r\n    setEditedTask((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      {tasks.map((task) => (\r\n        <ListItem key={task.id} className=\"task-item\">\r\n          <Box display=\"flex\" alignItems=\"center\" width=\"100%\">\r\n            {editingTaskId === task.id ? (\r\n              <>\r\n                <TextField\r\n                  label=\"Title\"\r\n                  variant=\"outlined\"\r\n                  value={editedTask.title ?? task.title}\r\n                  onChange={(e) => handleChange('title', e.target.value)}\r\n                  className=\"form-field\"\r\n                />\r\n                <TextField\r\n                  label=\"Description\"\r\n                  variant=\"outlined\"\r\n                  value={editedTask.description ?? task.description}\r\n                  onChange={(e) => handleChange('description', e.target.value)}\r\n                  className=\"form-field\"\r\n                />\r\n                <Select\r\n                  value={editedTask.status ?? task.status}\r\n                  onChange={(e) => handleChange('status', e.target.value)}\r\n                  className=\"form-field\"\r\n                >\r\n                  <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                  <MenuItem value=\"InProgress\">In Progress</MenuItem>\r\n                  <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                </Select>\r\n                <Button onClick={() => handleSaveClick(task)} variant=\"contained\" color=\"primary\" className=\"form-button\">Save</Button>\r\n                <Button onClick={handleCancelClick} variant=\"outlined\" color=\"secondary\" className=\"form-button\">Cancel</Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ListItemText primary={task.title} secondary={task.description} />\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <span className={`status-key ${task.status.toLowerCase()}`}></span>\r\n                  <span>{task.status}</span>\r\n                  <IconButton onClick={() => handleEditClick(task)}>✏️</IconButton>\r\n                  <IconButton onClick={() => taskService.deleteTask(task.id).then(loadTasks)}>🗑️</IconButton>\r\n                </Box>\r\n              </>\r\n            )}\r\n          </Box>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}