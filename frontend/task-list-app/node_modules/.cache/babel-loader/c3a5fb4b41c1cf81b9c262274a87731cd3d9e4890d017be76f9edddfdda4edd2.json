{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'https://localhost:7244/api/users';\nconst getUser = async () => {\n  const response = await axios.get(`${API_URL}/current`);\n  return response.data;\n};\nconst getProfilePicture = async userId => {\n  const response = await axios.get(`${API_URL}/profilePicture`, {\n    params: {\n      userId\n    },\n    responseType: 'blob' // Important to handle image data\n  });\n  return URL.createObjectURL(response.data);\n};\nconst uploadProfilePicture = async (userId, file) => {\n  const formData = new FormData();\n  formData.append('profilePicture', file);\n  formData.append('userId', userId.toString());\n  await axios.post(`${API_URL}/profilePicture`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nconst updateProfilePicture = async (userId, file) => {\n  const formData = new FormData();\n  formData.append('profilePicture', file);\n  formData.append('userId', userId.toString());\n  await axios.put(`${API_URL}/profilePicture`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nconst deleteProfilePicture = async userId => {\n  await axios.delete(`${API_URL}/profilePicture`, {\n    params: {\n      userId\n    }\n  });\n};\nconst userService = {\n  getUser,\n  getProfilePicture,\n  uploadProfilePicture,\n  updateProfilePicture,\n  deleteProfilePicture\n};\nexport default userService;","map":{"version":3,"names":["axios","API_URL","getUser","response","get","data","getProfilePicture","userId","params","responseType","URL","createObjectURL","uploadProfilePicture","file","formData","FormData","append","toString","post","headers","updateProfilePicture","put","deleteProfilePicture","delete","userService"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/services/userService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { User } from '../interfaces/User';\r\n\r\nconst API_URL = 'https://localhost:7244/api/users';\r\n\r\nconst getUser = async (): Promise<User> => {\r\n  const response = await axios.get(`${API_URL}/current`);\r\n  return response.data;\r\n};\r\n\r\nconst getProfilePicture = async (userId: number): Promise<string> => {\r\n  const response = await axios.get(`${API_URL}/profilePicture`, {\r\n    params: { userId },\r\n    responseType: 'blob' // Important to handle image data\r\n  });\r\n  return URL.createObjectURL(response.data);\r\n};\r\n\r\nconst uploadProfilePicture = async (userId: number, file: File): Promise<void> => {\r\n  const formData = new FormData();\r\n  formData.append('profilePicture', file);\r\n  formData.append('userId', userId.toString());\r\n\r\n  await axios.post(`${API_URL}/profilePicture`, formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n};\r\n\r\nconst updateProfilePicture = async (userId: number, file: File): Promise<void> => {\r\n  const formData = new FormData();\r\n  formData.append('profilePicture', file);\r\n  formData.append('userId', userId.toString());\r\n\r\n  await axios.put(`${API_URL}/profilePicture`, formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n};\r\n\r\nconst deleteProfilePicture = async (userId: number): Promise<void> => {\r\n  await axios.delete(`${API_URL}/profilePicture`, {\r\n    params: { userId }\r\n  });\r\n};\r\n\r\nconst userService = {\r\n  getUser,\r\n  getProfilePicture,\r\n  uploadProfilePicture,\r\n  updateProfilePicture,\r\n  deleteProfilePicture,\r\n};\r\n\r\nexport default userService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,kCAAkC;AAElD,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAA2B;EACzC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,UAAU,CAAC;EACtD,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMC,iBAAiB,GAAG,MAAOC,MAAc,IAAsB;EACnE,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,iBAAiB,EAAE;IAC5DO,MAAM,EAAE;MAAED;IAAO,CAAC;IAClBE,YAAY,EAAE,MAAM,CAAC;EACvB,CAAC,CAAC;EACF,OAAOC,GAAG,CAACC,eAAe,CAACR,QAAQ,CAACE,IAAI,CAAC;AAC3C,CAAC;AAED,MAAMO,oBAAoB,GAAG,MAAAA,CAAOL,MAAc,EAAEM,IAAU,KAAoB;EAChF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEH,IAAI,CAAC;EACvCC,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAET,MAAM,CAACU,QAAQ,CAAC,CAAC,CAAC;EAE5C,MAAMjB,KAAK,CAACkB,IAAI,CAAC,GAAGjB,OAAO,iBAAiB,EAAEa,QAAQ,EAAE;IACtDK,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAOb,MAAc,EAAEM,IAAU,KAAoB;EAChF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEH,IAAI,CAAC;EACvCC,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAET,MAAM,CAACU,QAAQ,CAAC,CAAC,CAAC;EAE5C,MAAMjB,KAAK,CAACqB,GAAG,CAAC,GAAGpB,OAAO,iBAAiB,EAAEa,QAAQ,EAAE;IACrDK,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMG,oBAAoB,GAAG,MAAOf,MAAc,IAAoB;EACpE,MAAMP,KAAK,CAACuB,MAAM,CAAC,GAAGtB,OAAO,iBAAiB,EAAE;IAC9CO,MAAM,EAAE;MAAED;IAAO;EACnB,CAAC,CAAC;AACJ,CAAC;AAED,MAAMiB,WAAW,GAAG;EAClBtB,OAAO;EACPI,iBAAiB;EACjBM,oBAAoB;EACpBQ,oBAAoB;EACpBE;AACF,CAAC;AAED,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}