{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\Work\\\\Projects\\\\Interview\\\\task-list-app\\\\src\\\\components\\\\RegisterForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Box } from '@mui/material';\nimport { registerUser } from '../api/api';\nimport '../assets/css/RegisterForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = ({\n  onRegister,\n  onClose\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isError, setIsError] = useState(false);\n  const handleRegister = async e => {\n    e.preventDefault();\n    const userData = {\n      username,\n      email,\n      passwordHash: password,\n      profilePictureFileName: ''\n    };\n    try {\n      const response = await registerUser(userData);\n      onRegister(response.data);\n      setMessage('Registration successful!');\n      setIsError(false);\n      onClose();\n    } catch (error) {\n      setMessage('Registration failed.');\n      setIsError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Username\",\n        variant: \"outlined\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"form-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        variant: \"outlined\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"form-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        variant: \"outlined\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"form-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        className: \"form-button\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      className: isError ? 'error-message' : 'success-message',\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"o8F+c4ZGcJ26gkj7lhTIFWFJ9eY=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Box","registerUser","jsxDEV","_jsxDEV","RegisterForm","onRegister","onClose","_s","username","setUsername","email","setEmail","password","setPassword","message","setMessage","isError","setIsError","handleRegister","e","preventDefault","userData","passwordHash","profilePictureFileName","response","data","error","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","value","onChange","target","required","type","color","_c","$RefreshReg$"],"sources":["C:/Users/franc/Documents/Work/Projects/Interview/task-list-app/src/components/RegisterForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Box } from '@mui/material';\r\nimport { registerUser } from '../api/api';\r\nimport { User } from '../interfaces/User';\r\nimport '../assets/css/RegisterForm.css';\r\n\r\ninterface RegisterFormProps {\r\n  onRegister: (user: User) => void;\r\n  onClose: () => void; // Added onClose prop\r\n}\r\n\r\nconst RegisterForm: React.FC<RegisterFormProps> = ({ onRegister, onClose }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const handleRegister = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const userData: Partial<User> = {\r\n      username,\r\n      email,\r\n      passwordHash: password,\r\n      profilePictureFileName: ''\r\n    };\r\n\r\n    try {\r\n      const response = await registerUser(userData);\r\n      onRegister(response.data);\r\n      setMessage('Registration successful!');\r\n      setIsError(false);\r\n      onClose();\r\n    } catch (error) {\r\n      setMessage('Registration failed.');\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className=\"form-container\">\r\n      <Typography variant=\"h4\">Register</Typography>\r\n      <form onSubmit={handleRegister}>\r\n        <TextField\r\n          label=\"Username\"\r\n          variant=\"outlined\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          className=\"form-field\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className=\"form-field\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          className=\"form-field\"\r\n          required\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          className=\"form-button\"\r\n        >\r\n          Register\r\n        </Button>\r\n      </form>\r\n      {message && (\r\n        <Typography\r\n          variant=\"body1\"\r\n          className={isError ? 'error-message' : 'success-message'}\r\n        >\r\n          {message}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}